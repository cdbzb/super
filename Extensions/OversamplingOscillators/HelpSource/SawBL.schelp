TITLE:: SawBL
summary:: Polynomial Bandlimited Sawtooth
categories:: UGens>Oscillator
related:: SawBL, SquareBL, TriBL, ImpulseBL, SinOscOS, TriOS, SawOS, SquareOS, VarSawOS, PMOscOS, PM7OS, FM7OS

DESCRIPTION::
A Bandlimited Sawtooth wave oscillator based on Julius Smith's PolySaw oscillator in the Faust source. It expands on that algorithm by applying a 4th order polynomial transition to higher frequencies, a 2nd order polynomial to the lower frequencies, and uses a non-bandlimited sawtooth below 1hz.


CLASSMETHODS::

METHOD:: ar

ARGUMENT:: freq
frequency - FM is possible

ARGUMENT:: iphase
initial phase

ARGUMENT:: mul
mul

ARGUMENT:: add
add


EXAMPLES::

code::
{SawBL.ar(K2A.ar(MouseX.kr(-1000,10000)), 0, 0.1)}.scope;

//Unlike Saw, phase offset works, but there will be a mulit-sample fade in:
{SawBL.ar(100, 0.5)}.plot(0.001);
{SawBL.ar(100, 0.5)}.plot(5/s.sampleRate);

//Frequency modulation is possible
({SawBL.ar(MouseX.kr(200,4000)+
	(LFSaw.ar(MouseY.kr(200,4000))*3000)).dup*0.2
}.play)

//SawOS, the oversampled Saw, might be preferable
({SawOS.ar(MouseX.kr(200,4000)+
	(LFSaw.ar(MouseY.kr(200,4000))*3000), 0, 4).dup*0.2
}.play)

//Extreme Modulation is possible.

({
	var locIn=LocalIn.ar(1);
	var feedbackMul = 5000;
	var mod = feedbackMul*SawBL.ar((MouseY.kr(0, 8000)+(locIn*2000)));

	var car = SawBL.ar(
		(MouseX.kr(1, 8000)
			+(mod)), 0,1);
	LocalOut.ar(car);
	car.dup*0.2
}.scope)
::
