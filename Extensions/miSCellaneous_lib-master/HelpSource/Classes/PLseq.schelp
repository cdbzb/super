CLASS:: PLseq
summary:: dynamic scope Pseq variant
categories::Libraries>miSCellaneous>PLx suite, Streams-Patterns-Events>PLx suite
related:: Overviews/miSCellaneous, Classes/Pseq, Classes/PLser, Tutorials/PLx_suite, Tutorials/Event_patterns_and_Functions, Classes/VarGui, Tutorials/VarGui_shortcut_builds


DESCRIPTION::


Takes Symbol args for later reference by the Streams, which will read from variables in the Environments of their instantiation. See link::Tutorials/PLx_suite::.


CLASSMETHODS::

method::new

Creates a new PLseq object.

argument::list
Symbol or Pseq list arg.
If a Symbol is passed, list can be assigned to an envir variable later on.
This lists's elements can be dynamically replaced by Patterns or Streams.

argument::repeats
Symbol or Pseq repeats arg. If a Symbol is passed, repeats can be assigned to an envir variable later on. Defaults to inf.

argument::offset
Symbol or Pseq offset arg. Defaults to 0.
If a Symbol is passed, offset can be assigned to an envir variable later on.

argument::cutItems
Symbol or Boolean or Integer (0 or 1) or a Function returning Boolean or Integer.
If a Symbol is passed, cutItems can be assigned to an envir variable later on.
Determines if list items, which are Patterns or Streams themselves,
will be finished if a replacement occurs during their embedding, or if they will be replaced immediately. The latter is the default behaviour (default value true).
For protecting whole lists from immediate replacements see link::Classes/PLn::.

argument::envir
Dictionary or one of the Symbols
\top, \t (topEnvironment), \current, \c (currentEnvironment).
Dictionary to be taken for variable reference. Defaults to \current.


EXAMPLES::

code::

(
s = Server.local;
Server.default = s;
s.boot;
)

// definition for future reference in arbitrary Environments

(
p = Pbind(
    \midinote, PLseq(\a),
    \dur, 0.1
);
)


// assign a value to variable ~a in current Environment,
// play there.
// PLseq defaults to repeats = inf, Pseq defaults to repeats = 1

(
~a = (67..70) ++ Pseq((99..70));

x = p.play;
)


// try replacing Pseq stream while chromatic line down,
// works immediately with default value cutItems = true

~a[4] = 73;


// replace whole list

~a = (60..65);

x.stop;


//////////////////////


// placeholder may also get lists of event patterns

(
p = PLseq(\a);

~a = [
	Pbind(
        \midinote, Pwhite(60, 65, 3),
        \dur, 0.2
    ),
    Pbind(
        \midinote, Pwhite(80, 85, 3),
        \dur, 0.2
    )
];

x = p.play;
)


// replace array element

(
~a[0] = Pbind(
    \midinote, Pwhite(70, 75, 3) + [0, 5],
    \dur, 0.15
);
)

// replace whole array

(
~a = [ Pbind(
        \midinote, Pwhite(60, 65, 3),
        \dur, 0.05
    ),
    Pbind(
        \midinote, Pwhite(70, 90, 2),
        \dur, 0.25
        )
];
)

x.stop;

::
 