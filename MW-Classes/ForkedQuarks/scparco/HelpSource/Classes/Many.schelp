TITLE:: Many
summary:: a specialized Parser that matches zero or more repeated occurrences of another Parser
categories:: Parsing Tools
related:: Classes/Parser, Classes/ManyOne

DESCRIPTION::
Many takes a Parser and produces a new Parser that matches zero or more of the given Parser.
The parse result of a Many parser is a list of parse results of the child parser.



CLASSMETHODS::

METHOD:: new
creates a new Many parser

ARGUMENT:: parser
a Parser of which zero or more need to be matched

returns:: Many

INSTANCEMETHODS::

METHOD:: init
initializes a Many parser

ARGUMENT:: parser
a Parser of which zero or more need to be matched. The parse result of a Many parser is a list of parse results of the given Parser. This can be an empty list.

returns:: Many

EXAMPLES::

code::
	(
	var separator = StrParser("|");
	var floatp = ParserFactory.makeFloatParser;
	var float_separated_by_separator = SequenceOf(
	    separator,
	    Many(SequenceOf(
	        floatp,
	        separator)));
	var result = Many(SequenceOf([floatp, separator])).run("3.1415|-89.23|0.12|"); // expected result [[3.1415, "|"], [ -89.23, "|"], [0.12, "|"]]
	result.result.postcs;
	)
	
	// maybe you are interested in the values only, then it's easier to use the SepBy family of parsers
	(
	var sepBy = ParserFactory.makeSepBy(StrParser("|"));
	var separated_floats_parser = sepBy.(ParserFactory.makeFloatParser);
	var result = separated_floats_parser.run("3.1415|-89.23|0.12|"); // expected result: [3.1415, -89.23, 0.12]
	result.result.postcs;
	)
	
::
