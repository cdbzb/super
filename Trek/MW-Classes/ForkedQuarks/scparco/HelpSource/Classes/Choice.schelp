TITLE:: Choice
summary:: a specialized Parser that can match one of multiple possibilities
categories:: Parsing Tools
related:: Classes/Parser, Classes/LongestChoice

DESCRIPTION::
Choice is a Parser that matches one of multiple subparsers. Parsers are tried in the order they are supplied,
and matching stops when the first one succeeded.

Note: an easy mistake to make (and with sometimes puzzling consequences) is to forget that the parsers to be supplied to Choice must be in a list.



CLASSMETHODS::

METHOD:: new
new creates a new Choice Parser

ARGUMENT:: parsers
a list of Parsers

returns:: Choice

INSTANCEMETHODS::

METHOD:: init
init initializes the Choice parser with a suitable parserStateTransformer function that can try successive parsers until one succeeds

ARGUMENT:: parsers
a list of parsers

returns:: Choice

EXAMPLES::

code::
	(
	var s1 = StrParser("hello!");
	var s2 = StrParser("bye!");
	var text = "hello!hello!bye!hello!";
	var seq = Many(Choice([s1, s2]));
	var result = seq.run(text); // [ "hello!", "hello!", "bye!", "hello!" ]
	result.result.postcs;
	)
	
::
