snippet fork
\{$1\}.fork;
endsnippet

snippet do
$1.do{|$2| $3};
endsnippet

snippet fold
//	$2	{{{$1
endsnippet

snippet env
Env.$1($2).kr(2,gate:$3)
endsnippet

snippet filter
$1[$2]=\filter->{|in| $3}
endsnippet

snippet pfx
SynthDef($1,\{|out wet=1 $3|
	var in=In.ar(out);
	var sig = $2;
	XOut.ar(out, wet, sig)\}
).add;
endsnippet

snippet part
P($1,start:$2,music:$3
);
endsnippet

snippet df  "me freq" i
[$1].df('$2'${3:,octave: $4})${5:.q}
endsnippet

snippet dm  "mid degrees" i
[$1].dm('$2'${3:,octave: $4})${5:.q}
endsnippet

snippet function "function" i
{${1:|$2|} }
endsnippet

snippet parse "parse rhythms" i
Song.parse($1,[$2]${3:,$4})${5:.q}
endsnippet

snippet eugen "Ugen" i
$1.${2:a}r
endsnippet

snippet fxdur "temporary " i
.dur(Song.secDur[$1])
endsnippet


snippet out
${1:=> }Out.ar(${2:0},${3:_})
endsnippet

snippet detect
${1:=> }DetectSilenceDry.ar(_,doneAction:${2:2})
endsnippet

snippet alewife "addLine" i
["${VISUAL}","r"].addLine;
endsnippet

snippet pdef
Pdef($1,${VISUAL:/.play;//});
endsnippet

snippet pb
(
	[
	$1
	].p
	.play
)
endsnippet

snippet foldd
//{{{${VISUAL}//}}}
endsnippet
