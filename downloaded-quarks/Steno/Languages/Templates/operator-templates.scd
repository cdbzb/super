/*

Templates for Operators

Operators combine a number of inputs from a stack.
Here, by default, we have 2 inputs, when you extend the argments, e.g. |x, y, z, controls|,
add a higher number below (e.g. 3 instead of 2)

*/
// '#'
(
~steno.operator('#', { |x, y, controls|

}, 2)
);

// '$'
(
~steno.operator('$', { |x, y, controls|

}, 2)
);

// '%'
(
~steno.operator('%', { |x, y, controls|

}, 2)
);

// '&'
(
~steno.operator('&', { |x, y, controls|

}, 2)
);

// '''
(
~steno.operator(''', { |x, y, controls|

}, 2)
);

// '*'
(
~steno.operator('*', { |x, y, controls|

}, 2)
);

// '+'
(
~steno.operator('+', { |x, y, controls|

}, 2)
);

// ','
(
~steno.operator(',', { |x, y, controls|

}, 2)
);

// '-'
(
~steno.operator('-', { |x, y, controls|

}, 2)
);

// '.'
(
~steno.operator('.', { |x, y, controls|

}, 2)
);

// '0'
(
~steno.operator('0', { |x, y, controls|

}, 2)
);

// '1'
(
~steno.operator('1', { |x, y, controls|

}, 2)
);

// '2'
(
~steno.operator('2', { |x, y, controls|

}, 2)
);

// '3'
(
~steno.operator('3', { |x, y, controls|

}, 2)
);

// '4'
(
~steno.operator('4', { |x, y, controls|

}, 2)
);

// '5'
(
~steno.operator('5', { |x, y, controls|

}, 2)
);

// '6'
(
~steno.operator('6', { |x, y, controls|

}, 2)
);

// '7'
(
~steno.operator('7', { |x, y, controls|

}, 2)
);

// '8'
(
~steno.operator('8', { |x, y, controls|

}, 2)
);

// '9'
(
~steno.operator('9', { |x, y, controls|

}, 2)
);

// ';'
(
~steno.operator(';', { |x, y, controls|

}, 2)
);

// '<'
(
~steno.operator('<', { |x, y, controls|

}, 2)
);

// '='
(
~steno.operator('=', { |x, y, controls|

}, 2)
);

// '>'
(
~steno.operator('>', { |x, y, controls|

}, 2)
);

// '?'
(
~steno.operator('?', { |x, y, controls|

}, 2)
);

// '@'
(
~steno.operator('@', { |x, y, controls|

}, 2)
);

// 'A'
(
~steno.operator('A', { |x, y, controls|

}, 2)
);

// 'B'
(
~steno.operator('B', { |x, y, controls|

}, 2)
);

// 'C'
(
~steno.operator('C', { |x, y, controls|

}, 2)
);

// 'D'
(
~steno.operator('D', { |x, y, controls|

}, 2)
);

// 'E'
(
~steno.operator('E', { |x, y, controls|

}, 2)
);

// 'F'
(
~steno.operator('F', { |x, y, controls|

}, 2)
);

// 'G'
(
~steno.operator('G', { |x, y, controls|

}, 2)
);

// 'H'
(
~steno.operator('H', { |x, y, controls|

}, 2)
);

// 'I'
(
~steno.operator('I', { |x, y, controls|

}, 2)
);

// 'J'
(
~steno.operator('J', { |x, y, controls|

}, 2)
);

// 'K'
(
~steno.operator('K', { |x, y, controls|

}, 2)
);

// 'L'
(
~steno.operator('L', { |x, y, controls|

}, 2)
);

// 'M'
(
~steno.operator('M', { |x, y, controls|

}, 2)
);

// 'N'
(
~steno.operator('N', { |x, y, controls|

}, 2)
);

// 'O'
(
~steno.operator('O', { |x, y, controls|

}, 2)
);

// 'P'
(
~steno.operator('P', { |x, y, controls|

}, 2)
);

// 'Q'
(
~steno.operator('Q', { |x, y, controls|

}, 2)
);

// 'R'
(
~steno.operator('R', { |x, y, controls|

}, 2)
);

// 'S'
(
~steno.operator('S', { |x, y, controls|

}, 2)
);

// 'T'
(
~steno.operator('T', { |x, y, controls|

}, 2)
);

// 'U'
(
~steno.operator('U', { |x, y, controls|

}, 2)
);

// 'V'
(
~steno.operator('V', { |x, y, controls|

}, 2)
);

// 'W'
(
~steno.operator('W', { |x, y, controls|

}, 2)
);

// 'X'
(
~steno.operator('X', { |x, y, controls|

}, 2)
);

// 'Y'
(
~steno.operator('Y', { |x, y, controls|

}, 2)
);

// 'Z'
(
~steno.operator('Z', { |x, y, controls|

}, 2)
);

// '\'
(
~steno.operator('\', { |x, y, controls|

}, 2)
);

// '^'
(
~steno.operator('^', { |x, y, controls|

}, 2)
);

// '_'
(
~steno.operator('_', { |x, y, controls|

}, 2)
);

// '`'
(
~steno.operator('`', { |x, y, controls|

}, 2)
);

// 'a'
(
~steno.operator('a', { |x, y, controls|

}, 2)
);

// 'b'
(
~steno.operator('b', { |x, y, controls|

}, 2)
);

// 'c'
(
~steno.operator('c', { |x, y, controls|

}, 2)
);

// 'd'
(
~steno.operator('d', { |x, y, controls|

}, 2)
);

// 'e'
(
~steno.operator('e', { |x, y, controls|

}, 2)
);

// 'f'
(
~steno.operator('f', { |x, y, controls|

}, 2)
);

// 'g'
(
~steno.operator('g', { |x, y, controls|

}, 2)
);

// 'h'
(
~steno.operator('h', { |x, y, controls|

}, 2)
);

// 'i'
(
~steno.operator('i', { |x, y, controls|

}, 2)
);

// 'j'
(
~steno.operator('j', { |x, y, controls|

}, 2)
);

// 'k'
(
~steno.operator('k', { |x, y, controls|

}, 2)
);

// 'l'
(
~steno.operator('l', { |x, y, controls|

}, 2)
);

// 'm'
(
~steno.operator('m', { |x, y, controls|

}, 2)
);

// 'n'
(
~steno.operator('n', { |x, y, controls|

}, 2)
);

// 'o'
(
~steno.operator('o', { |x, y, controls|

}, 2)
);

// 'p'
(
~steno.operator('p', { |x, y, controls|

}, 2)
);

// 'q'
(
~steno.operator('q', { |x, y, controls|

}, 2)
);

// 'r'
(
~steno.operator('r', { |x, y, controls|

}, 2)
);

// 's'
(
~steno.operator('s', { |x, y, controls|

}, 2)
);

// 't'
(
~steno.operator('t', { |x, y, controls|

}, 2)
);

// 'u'
(
~steno.operator('u', { |x, y, controls|

}, 2)
);

// 'v'
(
~steno.operator('v', { |x, y, controls|

}, 2)
);

// 'w'
(
~steno.operator('w', { |x, y, controls|

}, 2)
);

// 'x'
(
~steno.operator('x', { |x, y, controls|

}, 2)
);

// 'y'
(
~steno.operator('y', { |x, y, controls|

}, 2)
);

// 'z'
(
~steno.operator('z', { |x, y, controls|

}, 2)
);

// '|'
(
~steno.operator('|', { |x, y, controls|

}, 2)
);

// '~'
(
~steno.operator('~', { |x, y, controls|

}, 2)
);
