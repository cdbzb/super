CLASS:: UScore
summary:: A timeline for events
categories:: UnitLib
related:: CClasses/U, Classes/UChain, Classes/USession

DESCRIPTION::
(put long description here)


CLASSMETHODS::

METHOD:: activeScores
(describe method here)

returns:: (returnvalue)

METHOD:: initClass
(describe method here)

returns:: (returnvalue)

METHOD:: current
(describe method here)

returns:: (returnvalue)

METHOD:: new
(describe method here)

argument::  ... events
(describe argument here)

returns:: (returnvalue)

METHOD:: openWFS
(describe method here)

argument:: path
(describe argument here)

argument:: action
(describe argument here)

returns:: (returnvalue)


INSTANCEMETHODS::

METHOD:: events
(describe method here)

returns:: (returnvalue)

METHOD:: name
(describe method here)

argument:: x
(describe argument here)

returns:: (returnvalue)

METHOD:: loop
(describe method here)

returns:: (returnvalue)

METHOD:: playState
(describe method here)

argument:: newState
(describe argument here)

argument:: changed
(describe argument here)

returns:: (returnvalue)

METHOD:: updatePos
(describe method here)

argument:: x
(describe argument here)

returns:: (returnvalue)

METHOD:: playTask
(describe method here)

returns:: (returnvalue)

METHOD:: updatePosTask
(describe method here)

returns:: (returnvalue)

METHOD:: startedAt
(describe method here)

returns:: (returnvalue)

METHOD:: pausedAt
(describe method here)

returns:: (returnvalue)

METHOD:: init
(describe method here)

argument:: args
(describe argument here)

returns:: (returnvalue)

METHOD:: isPlaying
(describe method here)

returns:: (returnvalue)

METHOD:: isPaused
(describe method here)

returns:: (returnvalue)

METHOD:: isPreparing
(describe method here)

returns:: (returnvalue)

METHOD:: isPrepared
(describe method here)

returns:: (returnvalue)

METHOD:: isStopped
(describe method here)

returns:: (returnvalue)

METHOD:: duplicate
(describe method here)

returns:: (returnvalue)

METHOD:: makeView
(describe method here)

argument:: i
(describe argument here)

argument:: maxWidth
(describe argument here)

returns:: (returnvalue)

METHOD:: isFolder
(describe method here)

returns:: (returnvalue)

METHOD:: at
(describe method here)

argument:: index
(describe argument here)

returns:: (returnvalue)

METHOD:: collect
(describe method here)

argument:: func
(describe argument here)

returns:: (returnvalue)

METHOD:: do
(describe method here)

argument:: func
(describe argument here)

returns:: (returnvalue)

METHOD:: first
(describe method here)

returns:: (returnvalue)

METHOD:: last
(describe method here)

returns:: (returnvalue)

METHOD:: add
(describe method here)

argument:: newEvents
(describe argument here)

returns:: (returnvalue)

METHOD:: <|
(describe method here)

argument:: newEvents
(describe argument here)

returns:: (returnvalue)

METHOD:: <<
(describe method here)

argument:: score
(describe argument here)

returns:: (returnvalue)

METHOD:: size
(describe method here)

returns:: (returnvalue)

METHOD:: allEvents
(describe method here)

returns:: (returnvalue)

METHOD:: getAllUChains
(describe method here)

returns:: (returnvalue)

METHOD:: startTimes
(describe method here)

returns:: (returnvalue)

METHOD:: durations
(describe method here)

returns:: (returnvalue)

METHOD:: duration
(describe method here)

returns:: (returnvalue)

METHOD:: dur
(describe method here)

returns:: (returnvalue)

METHOD:: finiteDuration
(describe method here)

returns:: (returnvalue)

METHOD:: isFinite
(describe method here)

returns:: (returnvalue)

METHOD:: eventSustain
(describe method here)

returns:: (returnvalue)

METHOD:: release
(describe method here)

returns:: (returnvalue)

METHOD:: canFreeSynth
(describe method here)

returns:: (returnvalue)

METHOD:: cutStart
(describe method here)

returns:: (returnvalue)

METHOD:: cutEnd
(describe method here)

returns:: (returnvalue)

METHOD:: waitTime
(describe method here)

returns:: (returnvalue)

METHOD:: fromTrack
(describe method here)

argument:: track
(describe argument here)

returns:: (returnvalue)

METHOD:: sort
(describe method here)

returns:: (returnvalue)

METHOD:: findEmptyTrack
(describe method here)

argument:: startTime
(describe argument here)

argument:: endTime
(describe argument here)

returns:: (returnvalue)

METHOD:: findEmptyRegion
(describe method here)

argument:: startTime
(describe argument here)

argument:: endTime
(describe argument here)

argument:: startTrack
(describe argument here)

argument:: endTrack
(describe argument here)

returns:: (returnvalue)

METHOD:: checkIfInEmptyTrack
(describe method here)

argument:: evt
(describe argument here)

returns:: (returnvalue)

METHOD:: moveEventToEmptyTrack
(describe method here)

argument:: evt
(describe argument here)

returns:: (returnvalue)

METHOD:: addEventToEmptyTrack
(describe method here)

argument:: evt
(describe argument here)

returns:: (returnvalue)

METHOD:: addEventsToEmptyRegion
(describe method here)

argument:: events
(describe argument here)

returns:: (returnvalue)

METHOD:: findCompletelyEmptyTrack
(describe method here)

returns:: (returnvalue)

METHOD:: addEventToCompletelyEmptyTrack
(describe method here)

argument:: evt
(describe argument here)

returns:: (returnvalue)

METHOD:: cleanOverlaps
(describe method here)

returns:: (returnvalue)

METHOD:: eventsThatWillPlay
(describe method here)

argument:: startPos
(describe argument here)

argument:: startEventsActiveAtStartPos
(describe argument here)

returns:: (returnvalue)

METHOD:: eventsToPrepareNow
(describe method here)

argument:: startPos
(describe argument here)

argument:: loop
(describe argument here)

returns:: (returnvalue)

METHOD:: arrayForPlayTask
(describe method here)

argument:: startPos
(describe argument here)

argument:: assumePrepared
(describe argument here)

argument:: startEventsActiveAtStartPos
(describe argument here)

argument:: loop
(describe argument here)

returns:: (returnvalue)

METHOD:: prepare
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: action
(describe argument here)

returns:: (returnvalue)

METHOD:: start
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: updatePosition
(describe argument here)

returns:: (returnvalue)

METHOD:: prepareAndStart
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: updatePosition
(describe argument here)

returns:: (returnvalue)

METHOD:: prepareWaitAndStart
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: updatePosition
(describe argument here)

returns:: (returnvalue)

METHOD:: prStart
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: assumePrepared
(describe argument here)

argument:: callStopFirst
(describe argument here)

argument:: updatePosition
(describe argument here)

argument:: startEventsActiveAtStartPos
(describe argument here)

argument:: loop
(describe argument here)

returns:: (returnvalue)

METHOD:: prStartTasks
(describe method here)

argument:: targets
(describe argument here)

argument:: startPos
(describe argument here)

argument:: assumePrepared
(describe argument here)

argument:: updatePosition
(describe argument here)

argument:: startEventsActiveAtStartPos
(describe argument here)

argument:: loop
(describe argument here)

returns:: (returnvalue)

METHOD:: stopScore
(describe method here)

returns:: (returnvalue)

METHOD:: stopChains
(describe method here)

argument:: releaseTime
(describe argument here)

returns:: (returnvalue)

METHOD:: stop
(describe method here)

argument:: releaseTime
(describe argument here)

argument:: changed
(describe argument here)

returns:: (returnvalue)

METHOD:: pause
(describe method here)

returns:: (returnvalue)

METHOD:: prSubScoreResume
(describe method here)

argument:: targets
(describe argument here)

returns:: (returnvalue)

METHOD:: resume
(describe method here)

argument:: targets
(describe argument here)

returns:: (returnvalue)

METHOD:: cmdPeriod
(describe method here)

returns:: (returnvalue)

METHOD:: pos
(describe method here)

argument:: x
(describe argument here)

returns:: (returnvalue)

METHOD:: gui
(describe method here)

returns:: (returnvalue)

METHOD:: printOn
(describe method here)

argument:: stream
(describe argument here)

returns:: (returnvalue)

METHOD:: getInitArgs
(describe method here)

returns:: (returnvalue)

METHOD:: storeArgs
(describe method here)

returns:: (returnvalue)

METHOD:: onSaveAction
(describe method here)

returns:: (returnvalue)

METHOD:: sessionGUI
(describe method here)

argument:: view
(describe argument here)

returns:: (returnvalue)


EXAMPLES::

code::
(
z = UScore(
	*12.collect({ |i|
		var evt;
		evt = BufSndFile("sounds/a11wlk01-44_1.aiff", 
				rate: (i-6).midiratio, loop: [true,false].wrapAt(i) ).makeUChain
				.releaseSelf_(true).startTime_(i/2).track_(i).fadeOut_(1).fadeIn_(1);
		
		if( evt.duration == inf ) {
			evt.duration = 8; // looped events stopped by UScore
		};
		evt;
	})
);
x = UScoreEditor(z);
y = UScoreEditorGUI(x);
)

(
z = UScore(
	*12.collect({ |i|
		var evt;
		evt = UChain(i/2,i,rrand(3.0,10.0),false,\sine, \output).fadeOut_(1).fadeIn_(1);
		evt.units[0].set(\freq,rrand(200.0,600.0) );
		evt;
	})
);
x = UScoreEditor(z);
y = UScoreEditorGUI(x);
)


z.prepare( s, 0, { "done".postln } );
z.start( s, 0, true );

z.pause; // looped events keep playing
z.resume;

z.stop;

z.start( s, 0, false ); // takes extra wait time for preparing events (depends on content)

z.pos; // returns current position (keeps increasing if not stopped
::
